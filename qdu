#!/bin/sh

usage='Usage: '`basename "$0"`' [DIR]
Lists all files in DIR sorted by file size in ascending order.  Uses
current directory if DIR is unspecified.'

for arg in "$@"; do
    case "$arg" in
    --help) echo "$usage"
            exit
            ;;
    *)
            ;;
    esac
done

if [ $# -eq 0 ]; then
    dir="."
else
    dir="$1"
fi

# Escape special characters in $dir so that it can be treated as a literal when
# used in a sed filter.
dir_esc=`echo "$dir" | sed 's#\(\[\|\]\|[.^$|\#*\\]\)#\\\\\1#g'`

# Sed filter to remove leading "$dir/" from file names.
filter='s#^\([0-9]*\(\.[0-9]*\)\?[a-zA-Z]*[[:space:]]\+\)'"$dir_esc"'/*#\1#'

du -B1 --max-depth 1 -- "$dir" | sort -n | sed "$filter" | awk '
{
    # make file size human readable (e.g. "10.4M")
    unit = 1024
    radix = 1024 #1000
    size = $1

    for (unit_idx = 1; size/unit >= radix; unit_idx++) {
        size /= radix
    }
    for (; size >= unit; unit_idx++) {
        frac = size % unit * 100/unit
        size /= unit
    }

    # if frac/10 rounds up to 10, then let frac overflow into size
    if (frac/10 + (frac%10 >= 5) < 10) {
        frac = frac/10 + (frac%10 >= 5)
    } else {
        frac = 0
        size++
    }
    suf = substr (" KMGTPE", unit_idx, 1)

    # if less than 1K or if integral part has 2 or more digits
    if (unit_idx == 1 || size >= 10) {
        str = sprintf ("%d%s", size + (frac >= 5), suf)
    } else {
        str = sprintf ("%d.%d%s", size, frac, suf)
    }
    printf ("%-7s %s\n", str, $2)
}'
